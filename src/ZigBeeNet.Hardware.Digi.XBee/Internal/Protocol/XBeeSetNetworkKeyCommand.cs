//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Digi.XBee.Internal.Protocol
{
    using ZigBeeNet.Security;
    
    
    /// <summary>
    /// Class to implement the XBee command " Set Network Key ".
    /// AT Command <b>NK</b></p>Set the 128-bit AES network encryption key. This command is
    /// write-only and cannot be read. If set to 0 (default), the device selects a random network key. 
    /// This class provides methods for processing XBee API commands.
    /// </summary>
    public class XBeeSetNetworkKeyCommand : XBeeFrame, IXBeeCommand 
    {
        
        /// <summary>
        ///  </summary>
        private int _frameId;
        
        /// <summary>
        ///  </summary>
        private ZigBeeKey _networkKey;
        
        /// <summary>
        /// The frameId to set as </summary>
        /// <seecref="uint8"
        ///>
        ///  </see>
        public void SetFrameId(int frameId)
        {
            this._frameId = frameId;
        }
        
        /// <summary>
        /// The networkKey to set as </summary>
        /// <seecref="ZigBeeKey"
        ///>
        ///  </see>
        public void SetNetworkKey(ZigBeeKey networkKey)
        {
            this._networkKey = networkKey;
        }
        
        /// <summary>
        /// Method for serializing the command fields </summary>
        public int[] Serialize()
        {
            this.SerializeCommand(8);
            this.SerializeInt8(_frameId);
            this.SerializeAtCommand("NK");
            this.SerializeZigBeeKey(_networkKey);
            return this.GetPayload();
        }
    }
}
